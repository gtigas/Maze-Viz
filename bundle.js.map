{"version":3,"sources":["webpack/bootstrap b630e8dfdf89ab24901c","./lib/entry.js","./lib/maze.js","./lib/cell.js","./lib/generator.js","./lib/solver.js","./lib/prims.js","./lib/dfs.js","./lib/binders.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;ACND;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b630e8dfdf89ab24901c","import bindAll from './binders'\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementById(\"canvas\");\n  const ctx = canvasEl.getContext(\"2d\");\n  bindAll(ctx);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entry.js\n// module id = 0\n// module chunks = 0","import Cell from './cell'\n\nclass Maze {\n  constructor(ctx){\n    this.grid = this._populateGrid(ctx);\n    this.ctx = ctx\n    this.getCell = this.getCell.bind(this)\n    this.start = this.getCell([0,0])\n    this.end = this.getCell([18,30])\n    this.reset = this.reset.bind(this)\n  }\n\n  _populateGrid(ctx){\n    const grid = new Array(19)\n    for (var i = 0; i < 19; i++) {\n      grid[i] = new Array(31)\n      for (var j = 0; j < 31; j++) {\n        let renderPositionX = ((j * 25) + 5)\n        let renderPositionY = ((i * 25) + 5)\n        grid[i][j] = new Cell([i,j], renderPositionX, renderPositionY, ctx, this);\n      }\n    }\n    return grid\n  }\n\n  reset(){\n    this.grid = this._populateGrid(this.ctx);\n    this.start = this.getCell([0,0])\n    this.end = this.getCell([18,30])\n  }\n\n  unSolve(){\n    this.allCells().forEach( cell => {\n      cell.parent = null\n      cell.path = false;\n      cell.visited = false\n      cell.draw();\n    })\n  }\n\n  getCell(pos){\n    let [x, y] = pos\n    return this.grid[x][y]\n  }\n\n  randomize(opt){\n    const allCells = this.allCells();\n    if (opt === 'both') {\n      this.start = allCells[Math.floor(Math.random() * allCells.length)]\n      this.end = allCells[Math.floor(Math.random() * allCells.length)]\n    } else {\n      this[opt] = allCells[Math.floor(Math.random() * allCells.length)]\n    }\n    this.draw('solve')\n  }\n\n  draw(opt){\n    this.allCells().forEach( cell => cell.draw() )\n    if (opt === 'solve') {\n      this.ctx.fillStyle = 'green'\n      this.ctx.fillRect(this.start.xPosRender, this.start.yPosRender, 20, 20);\n      this.ctx.fillStyle = 'red'\n      this.ctx.fillRect(this.end.xPosRender, this.end.yPosRender, 20, 20);\n    }\n  }\n\n  allCells(){\n    return [].concat(...this.grid)\n  }\n}\n\nexport default Maze\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/maze.js\n// module id = 1\n// module chunks = 0","class Cell {\n  constructor(pos, x, y, ctx, maze){\n    this.created = false;\n    this.visited = false;\n    this.path = false;\n    this.start = false;\n    this.end = false;\n    this.pos = pos;\n    this.parent = null;\n    this.xPosRender = x;\n    this.yPosRender = y;\n    this.connectedCells = [];\n    this.ctx = ctx;\n    this.maze = maze;\n    this.neighbors = this.neighbors.bind(this)\n    this._checkNeighborPath = this._checkNeighborPath.bind(this)\n    this._breakDownWalls = this._breakDownWalls.bind(this)\n  }\n\n  neighbors(){\n    const neighbors = [];\n    Object.keys(DIRS).forEach( dir =>{\n      let neighborPos = [this.pos[0] +  DIRS[dir][0], this.pos[1] + DIRS[dir][1]]\n      if (this._isInvalidPosition(neighborPos)) return;\n\n      let neighbor = this.maze.getCell(neighborPos);\n      neighbors.push(neighbor)\n    });\n\n    return neighbors\n  }\n\n  unvisitedNeighbors(type){\n    return this.neighbors().filter( neighbor => {\n      return neighbor[type] === false\n    });\n  }\n  mazeNeighbors(){\n    return this.neighbors().filter( neighbor => {\n      return neighbor.created === true\n    });\n  }\n\n  unvisitedConnectedCells(){\n    return this.connectedCells.filter( neighbor => {\n      return neighbor.visited === false\n    });\n  }\n\n  connectPath(otherCell){\n    this.connectedCells.push(otherCell)\n    otherCell.connectedCells.push(this)\n  }\n\n  draw(){\n    if (this.created) {\n      this.ctx.fillStyle = 'white'\n    } else {\n      this.ctx.fillStyle = \"rgba(0, 0, 200, 0)\"\n    }\n    if (this.visited) {\n      this.ctx.fillStyle = 'lightgreen'\n    }\n    if (this.path) {\n      this.ctx.fillStyle = 'yellow'\n    }\n    if (this.head) {\n      this.ctx.fillStyle = 'red'\n    }\n    this._breakDownWalls();\n    this.ctx.fillRect(this.xPosRender, this.yPosRender, 20, 20);\n  }\n\n  _breakDownWalls(){\n    if (this._checkNeighborPath('S')) {\n      this.ctx.fillRect(this.xPosRender, (this.yPosRender + 20), 20, 5);\n    }\n    if (this._checkNeighborPath('E')) {\n      this.ctx.fillRect(this.xPosRender + 20, this.yPosRender, 5, 20);\n    }\n  }\n\n  _checkNeighborPath(dir){\n    const neighborPos = [this.pos[0] +  DIRS[dir][0], this.pos[1] + DIRS[dir][1]]\n    return this.connectedCells.some( cell => {\n      return cell.pos.toString() === neighborPos.toString()\n    })\n  }\n\n  _isInvalidPosition(pos){\n    return ((pos[0] < 0 || pos[0] > 18) || (pos[1] < 0 || pos[1] > 30))\n  }\n}\n\nconst DIRS = {\n  'N': [-1,0],\n  'E': [0,1],\n  'S': [1,0],\n  'W': [0,-1],\n}\n\nexport default Cell\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/cell.js\n// module id = 2\n// module chunks = 0","class MazeGenerator {\n  constructor(maze){\n    this.maze = maze\n    this.stack = []\n    this.visitedCells = 1\n    this.generate = this.generate.bind(this)\n    this.animate = this.animate.bind(this)\n  }\n\n  generate(){\n    $('#generate-start').prop('disabled', true)\n    requestAnimationFrame(this.animate)\n    this.stack.unshift(this.maze.getCell([0,0]))\n    this.stack[0].created = true\n    this.visitedCells++\n    const renderMaze = setInterval( () => {\n      if (this.visitedCells < 590) {\n        let currentCell = this.stack[0]\n        currentCell.head = true\n        let unvisitedNeighbors = currentCell.unvisitedNeighbors('created')\n        if (unvisitedNeighbors.length > 0) {\n          let randomCell = unvisitedNeighbors[Math.floor(Math.random() * unvisitedNeighbors.length)]\n          this.stack.unshift(randomCell)\n          currentCell.connectPath(randomCell)\n          currentCell.head = false\n          currentCell = randomCell\n          currentCell.created = true\n          this.visitedCells++\n        } else {\n          this.stack.shift().head = false;\n          this.stack[0].head = true;\n        }\n      } else {\n        clearInterval(renderMaze)\n        $('#generate-start').prop('disabled', false)\n      }\n    }, 0)\n\n  }\n\n  animate(){\n    this.maze.draw();\n    if (this.visitedCells === 590) {\n      return\n    }\n    requestAnimationFrame(this.animate)\n  }\n\n\n}\n\nexport default MazeGenerator\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/generator.js\n// module id = 3\n// module chunks = 0","class Solver {\n  constructor(maze){\n    this.maze = maze\n    this.stack = [maze.start]\n    this.solve = this.solve.bind(this)\n    this.colorPath = this.colorPath.bind(this)\n  }\n\n  colorPath(cell) {\n    if (!cell) {\n      return\n    }\n    setTimeout( () => {\n      cell.path = true;\n      cell.draw()\n      this.colorPath(cell.parent)\n    }, 2)\n  }\n\n  solve(){\n    if (this.solved) {\n      return\n    }\n    setTimeout( () => {\n      this.maze.draw('solve');\n      if (this.stack.length > 0) {\n        let currentCell = this.stack.shift()\n        if (!currentCell.visited) {\n          currentCell.visited = true\n          let connectedNeighbors = currentCell.unvisitedConnectedCells()\n          connectedNeighbors.forEach( cell => cell.parent = currentCell)\n          this.stack = connectedNeighbors.concat(this.stack)\n        }\n        if (this.maze.end === currentCell) {\n          this.colorPath(this.maze.end)\n          this.solved = true\n        } else {\n          this.solve();\n        }\n      }\n    }, 0)\n\n  }\n}\n\nexport default Solver\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/solver.js\n// module id = 4\n// module chunks = 0","class PrimsGenerator {\n  constructor(maze){\n    this.maze = maze\n    this.frontier = maze.start.unvisitedNeighbors('created')\n    this.visitedCells = 1\n    this.generate = this.generate.bind(this)\n    maze.start.created = true\n  }\n\n  generate(){\n    $('#generate-prims').prop('disabled', true)\n    if (this.frontier.length === 0) {\n      this.maze.draw()\n      $('#generate-prims').prop('disabled', false)\n      return\n    }\n    setTimeout( () => {\n      if (this.frontier.length > 0) {\n        let randomCell = this.frontier.splice([Math.floor(Math.random() * this.frontier.length)], 1)[0]\n        randomCell.head = true\n        this.maze.draw(); \n        let mazeNeighbors = randomCell.mazeNeighbors();\n        let randomMazeNeighbor = mazeNeighbors[Math.floor(Math.random() * mazeNeighbors.length)]\n        randomCell.connectPath(randomMazeNeighbor)\n        randomCell.parent = randomMazeNeighbor\n        randomCell.created = true\n        const unvisitedNeighbors = randomCell.unvisitedNeighbors('created')\n        unvisitedNeighbors.forEach( cell => {\n          this.frontier = this.frontier.filter( frontier => {\n            return frontier.pos.toString() !== cell.pos.toString()\n          })\n        })\n        this.frontier = this.frontier.concat(unvisitedNeighbors)\n        randomCell.head = false\n        this.generate()\n      }\n    }, 5)\n  }\n\n\n}\n\nexport default PrimsGenerator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/prims.js\n// module id = 5\n// module chunks = 0","class Dfs {\n  constructor(maze){\n    this.maze = maze\n    this.queue = [maze.start]\n    this.solve = this.solve.bind(this)\n    this.colorPath = this.colorPath.bind(this)\n  }\n\n  colorPath(cell) {\n    if (!cell) {\n      return\n    }\n    setTimeout( () => {\n      cell.path = true;\n      cell.draw()\n      this.colorPath(cell.parent)\n    }, 2)\n  }\n\n  solve(){\n    if (this.solved) {\n      return\n    }\n    setTimeout( () => {\n      this.maze.draw('solve');\n      if (this.queue.length > 0) {\n        let currentCell = this.queue.shift()\n        if (!currentCell.visited) {\n          currentCell.visited = true\n          let connectedNeighbors = currentCell.unvisitedConnectedCells()\n          connectedNeighbors.forEach( cell => cell.parent = currentCell)\n          this.queue = this.queue.concat(connectedNeighbors)\n        }\n        if (this.maze.end === currentCell) {\n          this.colorPath(this.maze.end)\n          this.solved = true\n        } else {\n          this.solve();\n        }\n      }\n    }, 0)\n\n  }\n}\n\nexport default Dfs\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/dfs.js\n// module id = 6\n// module chunks = 0","import Maze from './maze'\nimport MazeGenerator from './generator'\nimport Prims from './prims'\nimport Solver from './solver'\nimport Dfs from './dfs'\n\nconst bindAll = ctx => {\n  const maze = new Maze(ctx);\n  $('#generate-prims').click( ()=>{\n    ctx.clearRect(0,0,780,480)\n    const generator = new Prims(maze)\n    generator.generate();\n  })\n  $('#generate-start').click( ()=>{\n    ctx.clearRect(0,0,780,480)\n    const generator = new MazeGenerator(maze)\n    generator.generate();\n  })\n\n  $('#clear-button').click( ()=>{\n    maze.reset();\n    ctx.clearRect(0,0,780,480)\n  })\n\n  $('#reset-button').click( ()=>{\n    maze.unSolve();\n  })\n\n  $('#maze-solve').click( ()=>{\n    const solver = new Solver(maze)\n    solver.solve();\n  })\n\n  $('#maze-dfs').click( ()=>{\n    const solver = new Dfs(maze)\n    solver.solve();\n  })\n  $('#random-start').click( ()=>{\n    maze.randomize('start')\n  })\n  $('#random-end').click( ()=>{\n    maze.randomize('end')\n  })\n  $('#random-both').click( ()=>{\n    maze.randomize('both')\n  })\n}\n\nexport default bindAll\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/binders.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}